name: Build X86-64 master

on:
  workflow_dispatch:
    inputs:
      zju_script:
        description: "Whether to add zju localizing script"
        required: true
        default: "No"
        type: choice
        options:
        - "Add"
        - "No"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Initialize
      run: |
        sudo swapoff -a
        sudo apt-get -y update
        sudo apt-get -y install asciidoc autoconf automake autopoint binutils build-essential bzip2 ccache clang clangd curl device-tree-compiler ecj fastjar file flex g++ g++-multilib gawk gcc gcc-multilib gettext git gperf java-propose-classpath lib32gcc-s1 libc6-dev-i386 libelf-dev libglib2.0-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool p7zip-full patch pkgconf python3 python3-pip python3-ply qemu-utils rsync scons squashfs-tools subversion swig tar time uglifyjs unzip wget xsltproc zlib1g-dev zstd
        sudo apt-get -y clean

    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        ref: main

    - name: Get source code
      uses: actions/checkout@v3
      with:
        repository: immortalwrt/immortalwrt
        ref: master
        path: 'openwrt'

    - name: Set path
      run: |
        mkdir -p releases artifacts
        echo "MAIN_PATH=$(pwd)" >> $GITHUB_ENV
        echo "OPENWRT_PATH=$(pwd)/openwrt" >> $GITHUB_ENV
        echo "RELEASES_PATH=$(pwd)/releases" >> $GITHUB_ENV

    - name: Get feeds and dl
      run: |
        cd ${OPENWRT_PATH}
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        wget -q https://github.com/${GITHUB_REPOSITORY}/releases/download/latest-x64-master/dl_cache.tar.zst || dlCacheState="notExist"
        if [ ${dlCacheState}x = "notExist"x ]; then
          echo "dl cache does not exist."
        else
          tar --zstd -xf dl_cache.tar.zst && rm -f dl_cache.tar.zst
          echo "dl cache restored."
        fi
        du -h --max-depth=1

    - name: Customize
      run: |
        cd ${OPENWRT_PATH}
        sed -i 's/192\.168\.1\.1/192\.168\.13\.1/g' ./package/base-files/files/bin/config_generate
        BUILD_DATE=$(date -d "8 hour" -u +%Y-%m-%d)
        sed -i "s/%D %V %C/ImmortalWrt@${BUILD_DATE}/g" ./package/base-files/files/etc/openwrt_release
        if [ ${{ inputs.zju_script }}x != "Nox" ]; then
          mkdir -p ./files/etc/uci-defaults/
          cp ${MAIN_PATH}/custom/zju_localize ./files/etc/uci-defaults/
          echo "Added script for zju."
        fi
        picct=0
        for pic in ${MAIN_PATH}/custom/*.jpg; do
          picct=$(expr ${picct} + 1)
          mv ${pic} ${MAIN_PATH}/custom/${picct}.jpg
        done
        tgtpic=$(expr $(date +%s) % ${picct} + 1)
        echo "Using No.${tgtpic} pic as default argon background."
        rm ./feeds/luci/themes/luci-theme-argon/htdocs/luci-static/argon/img/bg1.jpg
        cp ${MAIN_PATH}/custom/${tgtpic}.jpg ./feeds/luci/themes/luci-theme-argon/htdocs/luci-static/argon/img/bg1.jpg

    - name: Generate and update configs
      run: |
        cd ${OPENWRT_PATH}
        cat ${MAIN_PATH}/configs/X64-master/myConfig > ./.config
        make defconfig
        cp ./.config ${MAIN_PATH}/configs/X64-master/new_all_config
        sh ./scripts/diffconfig.sh > ${MAIN_PATH}/configs/X64-master/new_diff_config
        cd ${MAIN_PATH}/configs/X64-master/
        if [ -n "$(diff -q new_all_config all_config)" ]; then
          rm -f all_config diff_config
          mv new_all_config all_config
          mv new_diff_config diff_config
          cd ${MAIN_PATH}
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add ${MAIN_PATH}/configs/X64-master/all_config ${MAIN_PATH}/configs/X64-master/diff_config
          git commit -m "Update X64-master config files"
          git push origin main
          echo "New configs commited."
        else
          echo "Configs have not changed."
        fi

    - name: Build firmware
      run: |
        cd ${OPENWRT_PATH}
        # build po2lmo
        cp -r ./feeds/luci/modules/luci-base/src/ "po2lmo"
        pushd "po2lmo"
        make po2lmo
        sudo rm -rf "/usr/bin/po2lmo"
        sudo cp -fp "po2lmo" "/usr/bin/po2lmo"
        echo "po2lmo built."
        popd
        echo "Using $(($(nproc)+1)) threads to compile..."
        make download world -j $(($(nproc)+1)) || make download world -j1 V=s
        if [ ${{ inputs.zju_script }}x != "Nox" ]; then
          echo "RELEASE_BODY=Master firmware built at: $(date -d "8 hour" -u +"%Y-%m-%d %H:%M"), with zju localization" >> $GITHUB_ENV
        else
          echo "RELEASE_BODY=Master firmware built at: $(date -d "8 hour" -u +"%Y-%m-%d %H:%M")" >> $GITHUB_ENV
        fi
        du -h --max-depth=1

    - name: Delete old release
      continue-on-error: true
      uses: dev-drprasad/delete-tag-and-release@v0.2.1
      with:
        delete_release: true
        tag_name: latest-x64-master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Manage releases and artifacts
      run: |
        mv ${OPENWRT_PATH}/bin/targets/x86/64/* ${RELEASES_PATH}
        mv ${OPENWRT_PATH}/dl ${RELEASES_PATH}
        rm -rf ${OPENWRT_PATH}
        cd ${RELEASES_PATH}
        tar -czf packages.tgz ./packages --remove-files
        tar --zstd -cf dl_cache.tar.zst ./dl --remove-files
        echo "sha256sums is:"
        cat ${RELEASES_PATH}/sha256sums

    - name: Upload to Releases
      uses: ncipollo/release-action@v1
      with:
        name: latest master x64 firmware
        tag: latest-x64-master
        artifacts: ${{ env.RELEASES_PATH }}/*
        body: ${{ env.RELEASE_BODY }}
