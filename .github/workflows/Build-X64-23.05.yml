name: Build X86-64 23.05

on:
  #schedule:
  #  - cron: 0 10 * * 2
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Free Disk Space
      uses: insightsengineering/disk-space-reclaimer@v1
      with:
        tools-cache: false
        android: true
        dotnet: true
        haskell: true
        large-packages: false
        swap-storage: true
        docker-images: true

    - name: Initialize
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get -y update
        sudo apt-get -y install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache clang clangd cmake curl device-tree-compiler ecj fastjar file flex g++ g++-multilib gawk gcc gcc-multilib gettext git gperf java-propose-classpath lib32gcc-s1 libc6-dev-i386 libelf-dev libglib2.0-dev libncurses-dev libpython3-dev libreadline-dev libssl-dev libtool libyaml-dev libz-dev p7zip-full patch pkgconf python3 python3-pip python3-ply qemu-utils rsync scons squashfs-tools subversion swig tar time texinfo uglifyjs unzip wget xsltproc zlib1g-dev zstd
        sudo apt-get -y clean

    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        ref: main

    - name: Set environment
      run: |
        mkdir -p releases artifacts
        echo "MAIN_PATH=$(pwd)" >> $GITHUB_ENV
        echo "OPENWRT_PATH=$(pwd)/openwrt" >> $GITHUB_ENV
        echo "RELEASES_PATH=$(pwd)/releases" >> $GITHUB_ENV
        git config --global user.name "Github Actions"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Get immortalwrt code
      uses: actions/checkout@v4
      with:
        repository: immortalwrt/immortalwrt
        ref: openwrt-23.05
        path: ./openwrt

    - name: Get last dl
      run: |
        cd ${OPENWRT_PATH}
        mkdir -p ./feeds
        wget -q https://github.com/${GITHUB_REPOSITORY}/releases/download/latest-x64-23.05/dl_cache.tar.zst || dlCacheState="notExist"
        if [ ${dlCacheState}x = "notExist"x ]; then
          echo "dl cache does not exist."
        else
          tar --zstd -xf dl_cache.tar.zst && rm -f dl_cache.tar.zst
          echo "dl cache restored."
        fi

    - name: Get packages code
      uses: actions/checkout@v4
      with:
        repository: immortalwrt/packages
        ref: openwrt-23.05
        path: ./openwrt/feeds/packages

    - name: Get luci code
      uses: actions/checkout@v4
      with:
        repository: immortalwrt/luci
        ref: openwrt-23.05
        path: ./openwrt/feeds/luci

    - name: Get routing code
      uses: actions/checkout@v4
      with:
        repository: openwrt/routing
        ref: openwrt-23.05
        path: ./openwrt/feeds/routing

    - name: Get telephony code
      uses: actions/checkout@v4
      with:
        repository: openwrt/telephony
        ref: openwrt-23.05
        path: ./openwrt/feeds/telephony

    - name: Custom argon wallpaper
      run: |
        picct=0
        for pic in ${MAIN_PATH}/custom/*.jpg; do
          picct=$(expr ${picct} + 1)
          mv ${pic} ${MAIN_PATH}/custom/${picct}.jpg
        done
        tgtpic=$(expr $(date +%s) % ${picct} + 1)
        echo "Using No.${tgtpic} pic as default argon background."
        mv -f ${MAIN_PATH}/custom/${tgtpic}.jpg ${OPENWRT_PATH}/feeds/luci/themes/luci-theme-argon/htdocs/luci-static/argon/img/bg1.jpg

    - name: Generate and update configs
      run: |
        cd ${OPENWRT_PATH}
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        cat ${MAIN_PATH}/configs/X64-23.05/myConfig > ./.config
        make defconfig
        cp ./.config ${MAIN_PATH}/configs/X64-23.05/new_all_config
        sh ./scripts/diffconfig.sh > ${MAIN_PATH}/configs/X64-23.05/new_diff_config
        sed -i "s/BUILD_DATE/$(date -d "8 hour" -u +%Y-%m-%d)/" ./.config
        cd ${MAIN_PATH}/configs/X64-23.05/
        if [ -n "$(diff -q new_all_config all_config)" ]; then
          rm -f all_config diff_config
          mv new_all_config all_config
          mv new_diff_config diff_config
          cd ${MAIN_PATH}
          git add ${MAIN_PATH}/configs/X64-23.05/all_config ${MAIN_PATH}/configs/X64-23.05/diff_config
          git commit -m "Update X64-23.05 config files"
          git push origin main
          echo "New configs commited."
        else
          echo "Configs have not changed."
        fi

    - name: Build firmware
      run: |
        cd ${OPENWRT_PATH}
        echo "Using $(($(nproc)+1)) threads to compile..."
        make download -j $(($(nproc)+1))
        make world -j $(($(nproc)+1)) || make world -j1 V=s
        echo "RELEASE_BODY=Firmware built at: $(date -d "8 hour" -u +"%Y-%m-%d %H:%M")" >> $GITHUB_ENV

    - name: Delete old release
      continue-on-error: true
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release delete -y 'latest-x64-23.05' --cleanup-tag

    - name: Manage releases and artifacts
      run: |
        rm -rf ${OPENWRT_PATH}/bin/targets/x86/64/packages
        mv ${OPENWRT_PATH}/bin/targets/x86/64/* ${RELEASES_PATH}
        cd ${OPENWRT_PATH}
        make clean
        cd ${RELEASES_PATH} && rm -rf ${OPENWRT_PATH}
        echo "sha256sums is:"
        cat ${RELEASES_PATH}/sha256sums

    - name: Upload to Releases
      uses: ncipollo/release-action@v1
      with:
        name: latest 23.05 x64 firmware
        tag: latest-x64-23.05
        artifacts: ${{ env.RELEASES_PATH }}/*
        body: ${{ env.RELEASE_BODY }}

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 3
        keep_minimum_runs: 1
