name: Build X86-64

on:
  schedule:
    - cron: 0 10 * * 6
  workflow_dispatch:
    inputs:
      zju_localize:
        description: "Whether to add zju scripts"
        required: true
        default: "No"
        type: choice
        options:
        - "Add"
        - "No"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Initialize environment
      run: |
        sudo swapoff -a
        sudo apt -yq update
        sudo apt -yq install asciidoc autoconf automake autopoint binutils build-essential bzip2 ccache curl device-tree-compiler ecj fastjar file flex g++ g++-multilib gawk gcc gcc-multilib gettext git gperf java-propose-classpath lib32gcc1 libc6-dev-i386 libelf-dev libglib2.0-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool p7zip-full patch pkgconf python3 python3-pip python3-ply qemu-utils rsync scons squashfs-tools subversion swig tar time uglifyjs unzip wget xsltproc zlib1g-dev zstd
        sudo apt -yq clean

    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Get source code
      uses: actions/checkout@v3
      with:
        repository: immortalwrt/immortalwrt
        ref: openwrt-21.02
        path: 'openwrt'

    - name: Set path
      run: |
        mkdir -p releases artifacts
        echo "MAIN_PATH=$PWD" >> $GITHUB_ENV
        echo "OPENWRT_PATH=$PWD/openwrt" >> $GITHUB_ENV
        echo "RELEASES_PATH=$PWD/releases" >> $GITHUB_ENV

    - name: Update & Install feeds
      run: |
        cd ${OPENWRT_PATH}
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Restore dl files
      run: |
        cd ${OPENWRT_PATH}
        wget -q https://github.com/$GITHUB_REPOSITORY/releases/download/latest-x64/dl_cache.tar.zst && dlCacheState="exist"
        if [ "${dlCacheState}" = "exist" ]; then
          tar --zstd -xf dl_cache.tar.zst && rm -f dl_cache.tar.zst
          echo "dl cache restored."
        else
          echo "dl cache does not exist."
        fi
        du -h --max-depth=1

    - name: Customize
      run: |
        cd ${OPENWRT_PATH}
        sed -i 's/192\.168\.1\.1/192\.168\.6\.1/g' ./package/base-files/files/bin/config_generate
        sed -i 's/\${host:-openwrt\.org}/img\.alicdn\.com/g' ./feeds/luci/modules/luci-mod-network/root/etc/uci-defaults/50_luci-mod-admin-full
        wget -q https://downloads.immortalwrt.org/releases/21.02-SNAPSHOT/targets/x86/64/packages/Packages.gz
        zgrep -m 1 "Depends: kernel (=.*)$" Packages.gz | sed 's/.*-\(.*\))/\1/' > .vermagic
        rm -f Packages.gz
        sed -i 's/^\(.\).*vermagic$/\1cp $(TOPDIR)\/.vermagic $(LINUX_DIR)\/.vermagic/' ./include/kernel-defaults.mk
        BUILD_DATE=$(date -d "8 hour" -u +%Y-%m-%d)
        sed -i "s/%D %V %C/ImmortalWrt 21.02 @${BUILD_DATE}/g" ./package/base-files/files/etc/openwrt_release
        if [ ${{ inputs.zju_localize }}x != "No"x ]; then
          mkdir -p ./files/etc/uci-defaults/
          cp ${MAIN_PATH}/custom/zju_localize ./files/etc/uci-defaults/
          mkdir -p ./files/etc/hotplug.d/iface/
          cp ${MAIN_PATH}/custom/90-zjudown ./files/etc/hotplug.d/iface/
          echo "Added localization for zju"
        fi
        rm ./feeds/luci/themes/luci-theme-argon/htdocs/luci-static/argon/img/bg1.jpg
        cp ${MAIN_PATH}/custom/*.jpg ./feeds/luci/themes/luci-theme-argon/htdocs/luci-static/argon/img/bg1.jpg
        cp ${MAIN_PATH}/configs/X64_config ./.config
        make defconfig
        cp ./.config ${MAIN_PATH}/configs/new_all_X64_config
        sh ./scripts/diffconfig.sh > ${MAIN_PATH}/configs/new_diff_X64_config

    - name: Diff config
      id: diff_config
      run: |
        cd ${MAIN_PATH}/configs
        if [ "$(diff -q new_all_X64_config all_X64_config)" != "" ]; then
          echo "::set-output name=state::changed"
          rm -f all_X64_config diff_X64_config
          mv new_all_X64_config all_X64_config
          mv new_diff_X64_config diff_X64_config
        else
          echo "Configs have not changed."
        fi

    - name: Commit config files
      if: steps.diff_config.outputs.state == 'changed'
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add ${MAIN_PATH}/configs/all_X64_config ${MAIN_PATH}/configs/diff_X64_config
        git commit -m "Update config files"
        git push origin main

    - name: Build firmware
      run: |
        cd ${OPENWRT_PATH}
        echo "Using $(($(nproc)+1)) threads to compile..."
        make -j $(($(nproc)+1)) download world
        if [ ${{ inputs.zju_localize }}x != "no"x ]; then
          echo "RELEASE_BODY=Firmware built at: $(date -d "8 hour" -u +"%Y-%m-%d %H:%M"), with zju localization" >> $GITHUB_ENV
        else
          echo "RELEASE_BODY=Firmware built at: $(date -d "8 hour" -u +"%Y-%m-%d %H:%M"), without zju localization" >> $GITHUB_ENV
        fi

    - name: Delete old release
      uses: dev-drprasad/delete-tag-and-release@v0.2.0
      with:
        delete_release: true
        tag_name: latest-x64
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Manage releases and artifacts
      run: |
        mv ${OPENWRT_PATH}/bin/targets/x86/64/* ${RELEASES_PATH}
        mv ${OPENWRT_PATH}/dl ${RELEASES_PATH}
        rm -rf ${OPENWRT_PATH}
        cd ${RELEASES_PATH}
        du -h --max-depth=1
        tar -czf packages.tgz ./packages --remove-files
        tar --zstd -cf dl_cache.tar.zst ./dl --remove-files

    - name: Upload to Releases
      uses: ncipollo/release-action@v1.10.0
      with:
        name: latest x64 firmware
        tag: latest-x64
        artifacts: ${{ env.RELEASES_PATH }}/*
        body: ${{ env.RELEASE_BODY }}

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 3
        keep_minimum_runs: 1

