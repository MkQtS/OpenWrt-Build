name: Build RM-AC2100 22.03

on:
  schedule:
    - cron: 0 8 * * 6
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Initialize environment
      run: |
        sudo swapoff -a
        sudo apt-get -y update
        sudo apt-get -y install asciidoc autoconf automake autopoint binutils build-essential bzip2 clang clangd ccache curl device-tree-compiler ecj fastjar file flex g++ g++-multilib gawk gcc gcc-multilib gettext git gperf java-propose-classpath lib32gcc-s1 libc6-dev-i386 libelf-dev libglib2.0-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool p7zip-full patch pkgconf python3 python3-pip python3-ply qemu-utils rsync scons squashfs-tools subversion swig time uglifyjs unzip wget xsltproc zlib1g-dev zstd
        sudo apt-get -y clean

    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        ref: main

    - name: Get source code
      uses: actions/checkout@v3
      with:
        repository: openwrt/openwrt
        ref: openwrt-22.03
        path: 'openwrt'

    - name: Set path
      run: |
        mkdir -p releases artifacts
        echo "MAIN_PATH=$(pwd)" >> $GITHUB_ENV
        echo "OPENWRT_PATH=$(pwd)/openwrt" >> $GITHUB_ENV
        echo "RELEASES_PATH=$(pwd)/releases" >> $GITHUB_ENV

    - name: Update & Install feeds
      run: |
        cd ${OPENWRT_PATH}
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Restore dl files
      run: |
        cd ${OPENWRT_PATH}
        wget -q https://github.com/$GITHUB_REPOSITORY/releases/download/latest-rm2100/dl_cache.tar.zst || dlCacheState="notExist"
        if [ ${dlCacheState}x = "notExist"x ]; then
          echo "dl cache does not exist."
        else
          tar --zstd -xf dl_cache.tar.zst && rm -f dl_cache.tar.zst
          echo "dl cache restored."
          du -h --max-depth=1
        fi

    - name: Customize
      run: |
        cd ${OPENWRT_PATH}
        # Use aliyun mirror
        #sed -i 's/downloads\.openwrt\.org/mirrors\.aliyun\.com\/openwrt/' ./include/version.mk
        #wget -q https://mirrors.aliyun.com/openwrt/releases/22.03-SNAPSHOT/targets/ramips/mt7621/packages/Packages.gz
        #zgrep -m 1 "Depends: kernel (=.*)$" Packages.gz | sed 's/.*-\(.*\))/\1/' > .vermagic
        #rm -f Packages.gz
        #sed -i 's/^\(.\).*vermagic$/\1cp $(TOPDIR)\/.vermagic $(LINUX_DIR)\/.vermagic/' ./include/kernel-defaults.mk
        # Add build date to release name
        BUILD_DATE=$(date -d "8 hour" -u +%Y-%m-%d)
        sed -i "s/%D %V %C/OpenWrt 22.03@${BUILD_DATE}/g" ./package/base-files/files/etc/openwrt_release

    - name: Generate and update configs
      run: |
        cd ${OPENWRT_PATH}
        cat ${MAIN_PATH}/configs/RM21-22.03/myConfig > ./.config
        make defconfig
        cp ./.config ${MAIN_PATH}/configs/RM21-22.03/new_all_config
        sh ./scripts/diffconfig.sh > ${MAIN_PATH}/configs/RM21-22.03/new_diff_config
        cd ${MAIN_PATH}/configs/RM21-22.03/
        if [ -n "$(diff -q new_all_config all_config)" ]; then
          rm -f all_config diff_config
          mv new_all_config all_config
          mv new_diff_config diff_config
          cd ${MAIN_PATH}
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add ${MAIN_PATH}/configs/RM21-22.03/all_config ${MAIN_PATH}/configs/RM21-22.03/diff_config
          git commit -m "Update RM21-22.03 config files"
          git push origin main
          echo "New configs commited."
        else
          echo "Configs have not changed."
        fi

    - name: Build firmware
      run: |
        cd ${OPENWRT_PATH}
        echo "Using $(($(nproc)+1)) threads to compile..."
        make download world -j $(($(nproc)+1)) || make download world -j1 V=s
        echo "RELEASE_BODY=Firmware built at: $(date -d "8 hour" -u +"%Y-%m-%d %H:%M")" >> $GITHUB_ENV

    - name: Delete old release
      continue-on-error: true
      uses: dev-drprasad/delete-tag-and-release@v0.2.1
      with:
        delete_release: true
        tag_name: latest-rm2100
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Manage releases and artifacts
      run: |
        mv ${OPENWRT_PATH}/bin/targets/ramips/mt7621/* ${RELEASES_PATH}
        mv ${OPENWRT_PATH}/dl ${RELEASES_PATH}
        rm -rf ${OPENWRT_PATH}
        cd ${RELEASES_PATH}
        tar -czf packages.tgz ./packages --remove-files
        tar --zstd -cf dl_cache.tar.zst ./dl --remove-files
        echo "sha256sums is:"
        cat ${RELEASES_PATH}/sha256sums

    - name: Upload to releases
      uses: ncipollo/release-action@v1
      with:
        name: latest rm2100 firmware
        tag: latest-rm2100
        artifacts: ${{ env.RELEASES_PATH }}/*
        body: ${{ env.RELEASE_BODY }}
