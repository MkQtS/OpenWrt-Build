name: Build RM-AC2100

on:
  schedule:
    - cron: 0 5 * * 3
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Initialize environment
      run: |
        sudo swapoff -a
        sudo rm -f /swapfile
        sudo apt -yq update
        sudo apt -yq install asciidoc autoconf automake autopoint binutils build-essential bzip2 ccache curl device-tree-compiler ecj fastjar file flex g++ g++-multilib gawk gcc gcc-multilib gettext git gperf java-propose-classpath lib32gcc1 libc6-dev-i386 libelf-dev libglib2.0-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool p7zip-full patch pkgconf python3 python3-pip python3-ply qemu-utils rsync scons squashfs-tools subversion swig time uglifyjs unzip wget xsltproc zlib1g-dev zstd
        sudo apt -yq clean

    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Get source code
      uses: actions/checkout@v3
      with:
        repository: openwrt/openwrt
        ref: openwrt-22.03
        path: 'openwrt'

    - name: Set path
      run: |
        mkdir -p releases artifacts
        echo "MAIN_PATH=$PWD" >> $GITHUB_ENV
        echo "OPENWRT_PATH=$PWD/openwrt" >> $GITHUB_ENV
        echo "RELEASES_PATH=$PWD/releases" >> $GITHUB_ENV
        echo "ARTIFACTS_PATH=$PWD/artifacts" >> $GITHUB_ENV

    - name: Restore build cache-1
      continue-on-error: true
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: Build-RM2100.yml
        workflow_conclusion: success
        name: last_build_cache

    - name: Restore build cache-2
      run: |
        if [ -e Build_cache.tar.zst ]; then
          tar --zstd -xf Build_cache.tar.zst
          mv dl build_dir staging_dir -t $OPENWRT_PATH
          rm -f Build_cache.tar.zst
          echo "Last build cache restored."
        else
          echo "Cache file not found."
        fi

    - name: Update & Install feeds
      run: |
        cd $OPENWRT_PATH
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Customize
      run: |
        cd $OPENWRT_PATH
        # Localize
        sed -i -e 's/192\.168\.1\.1/192\.168\.9\.1/g' -e 's/0\.openwrt\.pool\.ntp\.org/ntp\.tencent\.com/' -e 's/1\.openwrt\.pool\.ntp\.org/ntp\.aliyun\.com/' \
        -e 's/2\.openwrt\.pool\.ntp\.org/ntp\.ntsc\.ac\.cn/' -e '/3\.openwrt\.pool\.ntp\.org/d' ./package/base-files/files/bin/config_generate
        # Use aliyun mirror
        sed -i 's/downloads\.openwrt\.org/mirrors\.aliyun\.com\/openwrt/' ./include/version.mk
        wget -q https://mirrors.aliyun.com/openwrt/releases/22.03-SNAPSHOT/targets/ramips/mt7621/packages/Packages.gz
        zgrep -m 1 "Depends: kernel (=.*)$" Packages.gz | sed 's/.*-\(.*\))/\1/' > .vermagic
        rm -f Packages.gz
        sed -i 's/^\(.\).*vermagic$/\1cp $(TOPDIR)\/.vermagic $(LINUX_DIR)\/.vermagic/' ./include/kernel-defaults.mk
        # Add build date to release name
        BUILD_DATE=$(date -d "8 hour" -u +%Y-%m-%d)
        sed -i "s/%D %V %C/OpenWrt 22.03 @$BUILD_DATE/g" ./package/base-files/files/etc/openwrt_release
        # Make .config
        cp $MAIN_PATH/configs/RM2100_config ./.config
        make defconfig
        cp ./.config $MAIN_PATH/configs/new_all_RM2100_config
        sh ./scripts/diffconfig.sh > $MAIN_PATH/configs/new_diff_RM2100_config

    - name: Diff config
      id: diff_config
      run: |
        cd $MAIN_PATH/configs
        if [ "$(diff -q new_all_RM2100_config all_RM2100_config)" != "" ]
        then
          echo "::set-output name=state::changed"
          rm -f all_RM2100_config diff_RM2100_config
          mv new_all_RM2100_config all_RM2100_config
          mv new_diff_RM2100_config diff_RM2100_config
        else
          echo "Configs have not changed."
        fi

    - name: Commit config files
      if: steps.diff_config.outputs.state == 'changed'
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add $MAIN_PATH/configs/all_RM2100_config $MAIN_PATH/configs/diff_RM2100_config
        git commit -m "Update config files"
        git push origin main

    - name: Build firmware
      run: |
        cd $OPENWRT_PATH
        du -h --max-depth=1
        echo "--------------------"
        echo "Using $(($(nproc)+1)) threads to compile..."
        make -j $(($(nproc)+1)) download world
        echo "RELEASE_BODY=Firmware built at: $(date -d "8 hour" -u +"%Y-%m-%d %H:%M")" >> $GITHUB_ENV
        echo "--------------------"
        du -h --max-depth=1

    - name: Delete old release
      uses: dev-drprasad/delete-tag-and-release@v0.2.0
      with:
        delete_release: true
        tag_name: latest-rm2100
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Manage releases and artifacts
      run: |
        mv $OPENWRT_PATH/bin/targets/ramips/mt7621/* $RELEASES_PATH
        cd $RELEASES_PATH
        tar -czf packages.tgz ./packages --remove-files
        cd $OPENWRT_PATH
        make clean
        du -h --max-depth=1
        echo "--------------------"
        mv $OPENWRT_PATH/dl $OPENWRT_PATH/build_dir $OPENWRT_PATH/staging_dir -t $ARTIFACTS_PATH
        cd $ARTIFACTS_PATH
        tar --zstd -cf Build_cache.tar.zst * --remove-files
        rm -rf $OPENWRT_PATH

    - name: Upload to releases
      uses: ncipollo/release-action@v1.10.0
      with:
        name: latest rm2100 firmware
        tag: latest-rm2100
        artifacts: ${{ env.RELEASES_PATH }}/*
        body: ${{ env.RELEASE_BODY }}

    - name: Upload to Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: last_build_cache
        path: ${{ env.ARTIFACTS_PATH }}/Build_cache.tar.zst
        retention-days: 14

